#include "Util/SensorMsgFunction.h"
#include "Library/HitSensor/SensorMsgSetupUtil.h"
#include "Library/LiveActor/ActorCollisionFunction.h"
#include "Library/LiveActor/ActorSensorFunction.h"

namespace rs{

SENSOR_MSG(AckCheckpoint);
SENSOR_MSG(AckGetShine);
SENSOR_MSG(AckLifeUp);
SENSOR_MSG(AckLifeMaxUp);
SENSOR_MSG(AskRailCollision);
SENSOR_MSG(BreakPartsBreak);
SENSOR_MSG(BirdFlyAway);
SENSOR_MSG(CameraAngleElevationResetFast);
SENSOR_MSG(ChorobonAttack);
SENSOR_MSG(ConductLightning);
SENSOR_MSG(DamageBallAttack);
SENSOR_MSG(DamageBallBodyAttack);
SENSOR_MSG(DonsukeAttack);
SENSOR_MSG(DonsukeGroundAttack);
SENSOR_MSG(DonsukePush);
SENSOR_MSG(DragonAttack);
SENSOR_MSG(EatExplosion);
SENSOR_MSG(ElectricWireNoLimitDistance);
SENSOR_MSG(EnemyAttack2D);
SENSOR_MSG(EnemyAttack3D);
SENSOR_MSG(EnemyAttackDash);
SENSOR_MSG(HackAttackFire);
SENSOR_MSG(EnemyAttackFireCollision);
SENSOR_MSG(EnemyAttackPoison);
SENSOR_MSG(EnemyAttackTRex);
SENSOR_MSG(HackAttackPoison);
SENSOR_MSG(ConfirmPaintObj);
SENSOR_MSG(ConfirmPaintObjForSeed);
SENSOR_MSG(PaintAttackPoison);
SENSOR_MSG(EnemyKick);
SENSOR_MSG(RabbitKick);
SENSOR_MSG(FishingAttack);
SENSOR_MSG(FishingCancel);
SENSOR_MSG(FishingFishApproach);
SENSOR_MSG(FishingFishFloatTouch);
SENSOR_MSG(FishingItemGet);
SENSOR_MSG(FishingLineTouch);
SENSOR_MSG(FishingStart);
SENSOR_MSG(FishingUpImmediatelyPrepare);
SENSOR_MSG(FireBrosFireBallCollide);
SENSOR_MSG(FireSwitchFire);
SENSOR_MSG(FrogHackTrample);
SENSOR_MSG(GhostRecordStart);
SENSOR_MSG(GhostRecordEnd);
SENSOR_MSG(GhostPlay);
SENSOR_MSG(GhostStop);
SENSOR_MSG(GiantWanderBossAttack);
SENSOR_MSG(GiantWanderBossBulletAttack);
SENSOR_MSG(GiantWanderBossBulletPush);
SENSOR_MSG(GhostReverse);
SENSOR_MSG(GhostCancel);
SENSOR_MSG(GrowFlowerSeedDisablePush);
SENSOR_MSG(GrowFlowerSeedNear);
SENSOR_MSG(GrowPlantPush);
SENSOR_MSG(GrowerAttack);
SENSOR_MSG(GrowerWallAttack);
SENSOR_MSG(GunetterAttack);
SENSOR_MSG(GunetterBodyTouch);
SENSOR_MSG(HammerAttackDown);
SENSOR_MSG(HammerAttackSide);
SENSOR_MSG(HammerAttackSideCollide);
SENSOR_MSG(ItemAmiiboKoopa);
SENSOR_MSG(IsExistPukupuku);
SENSOR_MSG(JangoAttack);
SENSOR_MSG(JangoRemoveCap);
SENSOR_MSG(KakkuKick);
SENSOR_MSG(KillByBossBattleDemo);
SENSOR_MSG(KillByHackFirstDemo);
SENSOR_MSG(KillByHomeDemo);
SENSOR_MSG(EndHomeDemo);
SENSOR_MSG(KillByMoonRockDemo);
SENSOR_MSG(KillByShineGet);
SENSOR_MSG(KillBySwitchTimer);
SENSOR_MSG(KoopaBindStart);
SENSOR_MSG(KoopaCapPlayerFocusTarget);
SENSOR_MSG(KoopaCapPunchFinishL);
SENSOR_MSG(KoopaCapPunchFinishR);
SENSOR_MSG(KoopaCapPunchInvincibleL);
SENSOR_MSG(KoopaCapPunchInvincibleR);
SENSOR_MSG(KoopaCapPunchKnockBackL);
SENSOR_MSG(KoopaCapPunchKnockBackR);
SENSOR_MSG(KoopaCapPunchL);
SENSOR_MSG(KoopaCapPunchR);
SENSOR_MSG(KoopaCapSpinAttack);
SENSOR_MSG(KoopaCatchKoopaCap);
SENSOR_MSG(KoopaDashPunchAttack);
SENSOR_MSG(KoopaFire2D);
SENSOR_MSG(KoopaFireBallAttack);
SENSOR_MSG(KoopaHackDamage);
SENSOR_MSG(KoopaHackPunch);
SENSOR_MSG(KoopaHackPunchCollide);
SENSOR_MSG(KoopaHackTrample);
SENSOR_MSG(KoopaInvalidHackPunchFaceToCollision);
SENSOR_MSG(KoopaRingBeamInvalidTouch);
SENSOR_MSG(KoopaTailAttack);
SENSOR_MSG(KoopaTouchFloor);
SENSOR_MSG(KouraAttack2D);
SENSOR_MSG(KouraItemGet2D);
SENSOR_MSG(LaunchBlow);
SENSOR_MSG(MeganeAttack);
SENSOR_MSG(MeganeHackTrample);
SENSOR_MSG(MofumofuBulletUnexplosion);
SENSOR_MSG(MoonBasementAttackMeteor);
SENSOR_MSG(MoonBasementBreakShockwaveMeteor);
SENSOR_MSG(MoonBasementRockSyncClippingRegist);
SENSOR_MSG(MoonBasementRockSyncClippingInvalidate);
SENSOR_MSG(MoonBasementRockSyncClippingValidate);
SENSOR_MSG(AttachCactusNeedle);
SENSOR_MSG_COMBO(CactusNeedleAttack);
SENSOR_MSG_COMBO(CactusNeedleAttackStrong);
SENSOR_MSG(PlayerBallToss);
SENSOR_MSG(PlayerCarryCameraSubjectiveStart);
SENSOR_MSG(PlayerCarryCameraSubjectiveEnd);
SENSOR_MSG(PlayerCarryShineGetStart);
SENSOR_MSG(PlayerCarryShineGetEnd);
SENSOR_MSG(PlayerCapCatch);
SENSOR_MSG(PlayerCapHipDrop);
SENSOR_MSG(PlayerCapPush);
SENSOR_MSG(PlayerCapRecovery);
SENSOR_MSG(PlayerCapTouchJump);
SENSOR_MSG(PlayerCapTrample);
SENSOR_MSG(PlayerCoinDashGet);
SENSOR_MSG(PlayerEyePriorityTarget);
SENSOR_MSG(PlayerDisregardHomingAttack);
SENSOR_MSG(PlayerDisregardTargetMarker);
SENSOR_MSG(PlayerEquipKoopaCap);
SENSOR_MSG(PlayerFireBallAttack2D);
SENSOR_MSG(PlayerFireBallAttack3D);
SENSOR_MSG(PlayerHipDropDemoTrigger);
SENSOR_MSG(PlayerHipDropHipDropSwitch);
SENSOR_MSG(PlayerItemGet2D);
SENSOR_MSG(PlayerJumpTakeOffFloor);
SENSOR_MSG(PlayerObjectWallHit);
SENSOR_MSG(PlayerObjLeapFrog);
SENSOR_MSG(PlayerPenguinAttack);
SENSOR_MSG(PlayerPenguinAttackReflect);
SENSOR_MSG(PlayerPoleClimbKeep);
SENSOR_MSG(PlayerPoleClimbReaction);
SENSOR_MSG(PlayerRabbitGet);
SENSOR_MSG(PlayerRollingObjHit);
SENSOR_MSG(PlayerRollingWallHitDown);
SENSOR_MSG(PlayerRollingWallHitMove);
SENSOR_MSG(PlayerStartGrabCeil);
SENSOR_MSG(PlayerStartWallJump);
SENSOR_MSG(PlayerEndGrabCeil);
SENSOR_MSG(PlayerSwordAttack);
SENSOR_MSG(PlayerTouchFloorJumpCode);
SENSOR_MSG(PlayerTrample2D);
SENSOR_MSG(PlayerUpperPunch2D);
SENSOR_MSG(PlayerObjUpperPunch2D);
SENSOR_MSG(PukupukuDash);
SENSOR_MSG(PukupukuKiss);
SENSOR_MSG(PukupukuRollingAttack);
SENSOR_MSG(Push2D);
SENSOR_MSG(PushToFish);
SENSOR_MSG(PushToMotorcycle);
SENSOR_MSG(PushToPlayer);
SENSOR_MSG(RadishAttack);
SENSOR_MSG(RadishReflect);
SENSOR_MSG(RaceStart);
SENSOR_MSG(RaceStop);
SENSOR_MSG(RaceWait);
SENSOR_MSG(RequestChangeKinokoSuper);
SENSOR_MSG(RequestChangeFireFlower);
SENSOR_MSG(RequestPlayerJumpBreakFloor);
SENSOR_MSG(RequestPlayerJump);
SENSOR_MSG(RequestPlayerTrampleJump);
SENSOR_MSG(RequestPlayerSpinJump);
SENSOR_MSG(RequestSphinxJump);
SENSOR_MSG(RequestPlayerSandMoon);
SENSOR_MSG(RequestPlayerSnow);
SENSOR_MSG(RequestPlayerWet);
SENSOR_MSG(StartHack);
SENSOR_MSG(SunshineAttack);
SENSOR_MSG(CancelHack);
SENSOR_MSG(CancelHackArea);
SENSOR_MSG(CancelHackByDokan);
SENSOR_MSG(PackunEatStart);
SENSOR_MSG(HackAttack);
SENSOR_MSG(HackAttackKick);
SENSOR_MSG(HackAttackMapObj);
SENSOR_MSG(HackDeathAreaSelfCheck);
SENSOR_MSG(HackDemoEnd);
SENSOR_MSG(HackDemoStart);
SENSOR_MSG(HackInvalidEscape);
SENSOR_MSG(HackInvalidEscapeNoReaction);
SENSOR_MSG(HackMarioCheckpointFlagWarp);
SENSOR_MSG(HackMarioDead);
SENSOR_MSG(HackMarioDemo);
SENSOR_MSG(HackMarioInWater);
SENSOR_MSG(HackMoveRockForestPush);
SENSOR_MSG(HackSelfCeilingCheckMiss);
SENSOR_MSG(HackSyncDamageVisibility);
SENSOR_MSG(WeaponItemGet);
SENSOR_MSG(CapAttack);
SENSOR_MSG(CapAttackCollide);
SENSOR_MSG(CapAttackStayRolling);
SENSOR_MSG(CapAttackStayRollingCollide);
SENSOR_MSG(CapAttackRailMove);
SENSOR_MSG(CapGiantAttack);
SENSOR_MSG(CapReflect);
SENSOR_MSG(CapReflectCollide);
SENSOR_MSG(CapStartLockOn);
SENSOR_MSG(CapKeepLockOn);
SENSOR_MSG(CapCancelLockOn);
SENSOR_MSG(CapHipDrop);
SENSOR_MSG(CapObjHipDrop);
SENSOR_MSG(CapObjHipDropReflect);
SENSOR_MSG(CapIgnoreCancelLockOn);
SENSOR_MSG(CapIgnoreCancelMissReaction);
SENSOR_MSG(CapIgnoreCollisionCheck);
SENSOR_MSG(CapItemGet);
SENSOR_MSG(CapTrampolineAttack);
SENSOR_MSG(CatchBombThrough);
SENSOR_MSG(CheckCarObstacle);
SENSOR_MSG(CheckIsCardboardBox);
SENSOR_MSG(BullHackAttack);
SENSOR_MSG(BullEnemyAttack);
SENSOR_MSG(EnemyAttackStrong);
SENSOR_MSG(EnemyObjBreak);
SENSOR_MSG(WhipAttack);
SENSOR_MSG_WITH_DATA(WhipBind, (WhipTargetInfo*, Info));
SENSOR_MSG_WITH_DATA(WhipHold, (WhipTargetInfo*, Info));
SENSOR_MSG_WITH_DATA_CUSTOM_CTOR(WhipThrow, ((sead::Vector3f, Vec)), ((const sead::Vector3f&, Vec))){ mVec.set(pVec); };
SENSOR_MSG(NoLimitTouchJump);
SENSOR_MSG(NoticePlayerDamage);
SENSOR_MSG(StatueDrop);
SENSOR_MSG(StatueTrampleReflect);
SENSOR_MSG(StatuePush);
SENSOR_MSG(StatueSnap);
SENSOR_MSG(HitGrowFlowerPot);
SENSOR_MSG(HitGrowPlantPot);
SENSOR_MSG(ImplantGrowFlowerSeed);
SENSOR_MSG(IcicleAttack);
SENSOR_MSG(IgnoreMirrorWarp);
SENSOR_MSG(IgnoredByRunawayNpc);
SENSOR_MSG(IgnorePushMotorcycle);
SENSOR_MSG(SandSharkAttack);
SENSOR_MSG(SeedAttack);
SENSOR_MSG(SeedAttackBig);
SENSOR_MSG(SeedAttackHold);
SENSOR_MSG(SeedItemGet);
SENSOR_MSG(SeedReflect);
SENSOR_MSG(SenobiTrample);
SENSOR_MSG(SenobiCancelStretch);
SENSOR_MSG(SenobiPunchBlockTransparent);
SENSOR_MSG(ShibakenApproach);
SENSOR_MSG(ShibakenKick);
SENSOR_MSG(HackUpperPunch);
SENSOR_MSG(HackObjUpperPunch);
SENSOR_MSG(ShineGet);
SENSOR_MSG(ShineGet2D);
SENSOR_MSG_WITH_DATA (SpherePush, (sead::Vector3f, vec), (f32, unk));
SENSOR_MSG(SphinxJumpAttack);
SENSOR_MSG(SphinxQuizRouteKill);
SENSOR_MSG(SphinxRideAttack);
SENSOR_MSG(SphinxRideAttackReflect);
SENSOR_MSG(SphinxRideAttackTouchThrough);
SENSOR_MSG(SphinxRideAttackTouch);
SENSOR_MSG(StampTo2D);
SENSOR_MSG(PechoSpot);
SENSOR_MSG(BelowObjBroken);
SENSOR_MSG(BindCollidedGround);
SENSOR_MSG(BindKeepDemoStart);
SENSOR_MSG(BindKeepDemoExecute);
SENSOR_MSG(BindKeepDemoEnd);
SENSOR_MSG(BindRecoveryLife);
SENSOR_MSG(MayorItemReflect);
SENSOR_MSG(MayorItemCollide);
SENSOR_MSG(BlowObjAttack);
SENSOR_MSG(BlowObjAttackReflect);
SENSOR_MSG(ConfirmFrailBox);
SENSOR_MSG(ConfirmBrokenFrailBox);
SENSOR_MSG(TankLookOn);
SENSOR_MSG(TankKickHack);
SENSOR_MSG(TankKickEnemy);
SENSOR_MSG(TankBullet);
SENSOR_MSG(TankBulletNoReaction);
SENSOR_MSG(TimerAthleticDemoStart);
SENSOR_MSG(RideOnStart);
SENSOR_MSG(RideOnEnd);
SENSOR_MSG(RideOnRelease);
SENSOR_MSG(HipDropTransformTransform);
SENSOR_MSG(HipDropTransformReverse);
SENSOR_MSG(HipDropTransformingUp);
SENSOR_MSG(HipDropTransformingDown);
SENSOR_MSG(HipDropTransformingFinish);
SENSOR_MSG(ClearFire);
SENSOR_MSG(CollectAnimalTouchCollide);
SENSOR_MSG(BossKnuckleCounter);
SENSOR_MSG(BossKnuckleFallAttack);
SENSOR_MSG(BossKnuckleHackAttack);
SENSOR_MSG(BossKnuckleKillerAttack);
SENSOR_MSG(BossKnuckleIceConflict);
SENSOR_MSG(BossKnuckleIceFallToMummy);
SENSOR_MSG(SkaterAttack);
SENSOR_MSG(EnableInSaucePan);
SENSOR_MSG(EnableMapCheckPointWarp);
SENSOR_MSG_WITH_DATA(StartInSaucePan, (bool, unk));
SENSOR_MSG(EndInSaucePan);
SENSOR_MSG(LineDancerLink);
SENSOR_MSG(LongPushSensorHit);
SENSOR_MSG(LongPushBoxHit);
SENSOR_MSG(GoldHammerAttack);
SENSOR_MSG(TrashBoxIn);
SENSOR_MSG(TouchDoorDrumn);
SENSOR_MSG(Kuribo2DTouch);
SENSOR_MSG(KuriboCollisionDamage);
SENSOR_MSG(KuriboCollisionKill);
SENSOR_MSG(KuriboFlick);
SENSOR_MSG_WITH_DATA(KuriboTowerOn, (u32, unk));
SENSOR_MSG(PartyPopperSoundAttack);
SENSOR_MSG(YokinBallAttack);
SENSOR_MSG(YoshiDirectEat);
SENSOR_MSG(YoshiTongueAttack);
SENSOR_MSG_WITH_DATA(YoshiTongueEatBind, (f32*, Float1), (f32*, Float2), (f32, Float3));
SENSOR_MSG(YoshiTongueEatBindCancel);
SENSOR_MSG(YoshiTongueEatBindFinish);
SENSOR_MSG(YoshiTongueEatHomingTarget);
SENSOR_MSG(YukimaruPush);
SENSOR_MSG(PunchMachinePunchStraight);
SENSOR_MSG(PunchMachinePunchHook);
SENSOR_MSG(PunchMachinePunchUpper);
SENSOR_MSG(MorningStarWarpStart);
SENSOR_MSG(MorningStarWarpEnd);
SENSOR_MSG(GemyAim);
SENSOR_MSG(HammerBrosHammerEnemyAttack);
SENSOR_MSG(HammerBrosHammerHackAttack);
SENSOR_MSG(HammerBrosHammerSearch);
SENSOR_MSG(HackBrosContact);
SENSOR_MSG(MotorcycleAttack);
SENSOR_MSG(MotorcycleCollideParkingLot);
SENSOR_MSG(MotorcycleDashAttack);
SENSOR_MSG(MotorcycleDashCollide);
SENSOR_MSG(WanwanEnemyAttack);
SENSOR_MSG(WanwanPush);
SENSOR_MSG(WanwanReboundAttack);
SENSOR_MSG(WanwanBlockAttack);
SENSOR_MSG(WanwanHoleIn);
SENSOR_MSG(WaterRoadIn);
SENSOR_MSG(WaterRoadNear);
SENSOR_MSG(BreedaSlap);
SENSOR_MSG(BreedaPush);
SENSOR_MSG(GamaneBullet);
SENSOR_MSG(GamaneBulletThrough);
SENSOR_MSG(GamaneBulletForCoinFlower);
SENSOR_MSG(VolleyballNpcScareByEnemy);
SENSOR_MSG(RocketFlowerExtension);
SENSOR_MSG(WanderBossCameraRange);
SENSOR_MSG(KuriboGirlAttack);
SENSOR_MSG(KuriboGirlLove);
SENSOR_MSG(KuriboTop);
SENSOR_MSG(TRexAttack);
SENSOR_MSG(TRexAttackCollideBody);
SENSOR_MSG(TRexAttackCollideHead);
SENSOR_MSG(TRexDashAttack);
SENSOR_MSG(TRexScrollPartsBreakWith);
SENSOR_MSG(TsukkunForceCancelCollide);
SENSOR_MSG(TsukkunHoldCollide);
SENSOR_MSG(TsukkunThroughCollide);
SENSOR_MSG(TsukkunNoTrace);
SENSOR_MSG(TouchFireDrum2D);
SENSOR_MSG(PropellerAttack);
SENSOR_MSG(TankExplosion);
SENSOR_MSG(TankHackTrample);
SENSOR_MSG(UtsuboAttack);
SENSOR_MSG(KillerAttackNoExplode);
SENSOR_MSG(KillerMagnumAttack);
SENSOR_MSG(KillerMagnumHackAttack);
SENSOR_MSG(GabuzouAttack);
SENSOR_MSG(StackerRollingAttack);
SENSOR_MSG(StackerCapBoostAttack);
SENSOR_MSG(IgnoreIgnitionBomb);
SENSOR_MSG(ExplosionReflectBomb);
SENSOR_MSG(GolemStampPress);
SENSOR_MSG_WITH_DATA(SwitchOnWithSaveRequest, (SaveObjInfo*, Info));
SENSOR_MSG_WITH_DATA(DigPointSmell, (DigPoint*, DigPoint));
SENSOR_MSG_WITH_DATA(MofumofuBodyChainExplode, (s32, unk));
SENSOR_MSG_WITH_DATA(MoonBasementRockThroughCollision, (bool, unk));
SENSOR_MSG_WITH_DATA(FishingWait, (al::HitSensor*, Sensor));
SENSOR_MSG_WITH_DATA(FishingUpImmediately, (sead::Matrix34f, unk), (sead::Vector3f, unk2), (const char*, unk3));

SENSOR_MSG_WITH_DATA(GunetterPush, (sead::Vector3f, unk), (f32, unk2));
SENSOR_MSG_WITH_DATA(TestPunch, (sead::Vector3f, unk), (s32, unk2), (s32, unk3));
SENSOR_MSG_WITH_DATA(TestPunchStrong, (sead::Vector3f, unk), (s32, unk2), (s32, unk3));
SENSOR_MSG_WITH_DATA(PunchGuard, (s32, unk), (s32, unk2));
SENSOR_MSG_WITH_DATA(TsukkunThrust, (sead::Vector3f, unk), (s32, unk2), (bool, unk3));
SENSOR_MSG_WITH_DATA(TsukkunThrustSpin, (sead::Vector3f, unk), (s32, unk2), (bool, unk3));
SENSOR_MSG_WITH_DATA(TsukkunThrustReflect, (sead::Vector3f, unk), (s32, unk2), (bool, unk3));
SENSOR_MSG_WITH_DATA(TsukkunThrustCollide, (sead::Vector3f, unk), (s32, unk2), (bool, unk3));
SENSOR_MSG_WITH_DATA(TsukkunThrustHitReflectCollide, (sead::Vector3f, unk), (s32, unk2), (bool, unk3));
SENSOR_MSG_WITH_DATA(TsukkunThrustReflectCollide, (sead::Vector3f, unk), (s32, unk2), (bool, unk3));
SENSOR_MSG_WITH_DATA(TsukkunThrustHole, (sead::Vector3f, unk), (sead::Vector3f, unk2));

SENSOR_MSG(CapBeamerBeam);
SENSOR_MSG(HosuiAttack);
SENSOR_MSG(HosuiAttackCollide);
SENSOR_MSG(HosuiAttackNoEffect);
SENSOR_MSG(HosuiAttackStrong);
SENSOR_MSG(HosuiTouch);
SENSOR_MSG(HosuiTrample);
SENSOR_MSG(HosuiTrampleReflect);
SENSOR_MSG(HosuiTrampleReflectHigh);
SENSOR_MSG(BubbleAttack);
SENSOR_MSG(BubbleAttackToPecho);
SENSOR_MSG(BubbleReflectH);
SENSOR_MSG(BubbleReflectV);
SENSOR_MSG(BubbleWallTouch);
SENSOR_MSG(BubbleGroundTouchTrigger);
SENSOR_MSG(BubbleLauncherStart);

SENSOR_MSG_WITH_DATA(AirExplosion, (sead::Vector3f, unk));
SENSOR_MSG_WITH_DATA(ByugoBlow, (sead::Vector3f, unk));
SENSOR_MSG_WITH_DATA(CapChangeGiant, (f32, unk), (f32, unk2));
SENSOR_MSG_WITH_DATA(CapRethrow, (sead::Vector3f, unk), (sead::Vector3f, unk2), (sead::Vector3f, unk3));
SENSOR_MSG_WITH_DATA(CapTouchWall, (sead::Vector3f, unk), (sead::Vector3f, unk2));
SENSOR_MSG_WITH_DATA(CollisionImpulse, (sead::Vector3f*, unk), (sead::Vector3f, unk2), (f32, unk3), (sead::Vector3f, unk4), (f32, unk5));
SENSOR_MSG_WITH_DATA(FireBlowerAttack, (sead::Vector3f, unk), (sead::Vector3f, unk2), (f32, unk3));
SENSOR_MSG_WITH_DATA(GhostRecordStartOk, (const char*, unk));
SENSOR_MSG(IgnoreTouchTarget);
SENSOR_MSG_WITH_DATA(InitTouchTargetInfo, (TouchTargetInfo*, unk), (const sead::Vector3f*, unk2));
//No sendMsg, but there is a function to set a s32
SENSOR_MSG_WITH_DATA(KuriboTowerNum, (s32, unk));
SENSOR_MSG_WITH_DATA(MagnetBulletAttack, (f32, unk));
SENSOR_MSG_WITH_DATA(NpcScareByEnemy, (s32, unk));
SENSOR_MSG_WITH_DATA(ObjSnapForce, (sead::Vector3f, unk));
SENSOR_MSG_WITH_DATA(PackunEatCancel, (sead::Vector3f, unk), (sead::Vector3f, unk2));
SENSOR_MSG_WITH_DATA(PackunEatEnd, (sead::Vector3f, unk), (sead::Vector3f, unk2));
SENSOR_MSG_WITH_DATA(PackunEatStartFollow, (const sead::Vector3f*, unk));
SENSOR_MSG_WITH_DATA(Paint, (sead::Color4u8, unk), (s32, unk2), (s32, unk3));
SENSOR_MSG_WITH_DATA(PaintTexture, (s32, unk), (f32, unk2), (s32, unk3));
SENSOR_MSG_WITH_DATA(CheckPaintClear, (sead::Color4u8, unk), (sead::Vector3f, unk2), (s32, unk3));
SENSOR_MSG_WITH_DATA(CheckPaintAlpha, (sead::Vector3f, unk));
SENSOR_MSG_WITH_DATA(SeedTouch, (sead::Vector3f, unk), (sead::Vector3f, unk2));
SENSOR_MSG_WITH_DATA(SenobiPartsMove, (sead::Vector3f, unk), (f32, unk2));

//Only used by isMsg (probably)
SENSOR_MSG(BullAttack);
SENSOR_MSG(CapEnableLockOn);

SEND_MSG_IMPL(AckCheckpoint);
SEND_MSG_IMPL(AckGetShine);
SEND_MSG_IMPL(AckLifeUp);
SEND_MSG_IMPL(AckLifeMaxUp);
SEND_MSG_IMPL(AskRailCollision);
SEND_MSG_IMPL(BreakPartsBreak);
SEND_MSG_IMPL(BirdFlyAway);
SEND_MSG_IMPL(CameraAngleElevationResetFast);
SEND_MSG_IMPL(ChorobonAttack);
SEND_MSG_IMPL(ConductLightning);
SEND_MSG_IMPL(DamageBallAttack);
SEND_MSG_IMPL(DamageBallBodyAttack);
SEND_MSG_IMPL(DonsukeAttack);
SEND_MSG_IMPL(DonsukeGroundAttack);
SEND_MSG_IMPL(DonsukePush);
SEND_MSG_IMPL(DragonAttack);
SEND_MSG_IMPL(EatExplosion);
SEND_MSG_IMPL(ElectricWireNoLimitDistance);
SEND_MSG_IMPL(EnemyAttack2D);
SEND_MSG_IMPL(EnemyAttack3D);
SEND_MSG_IMPL(EnemyAttackDash);
SEND_MSG_IMPL(HackAttackFire);
SEND_MSG_IMPL(EnemyAttackFireCollision);
SEND_MSG_IMPL(EnemyAttackPoison);
SEND_MSG_IMPL(EnemyAttackTRex);
SEND_MSG_IMPL(HackAttackPoison);
SEND_MSG_IMPL(ConfirmPaintObj);
SEND_MSG_IMPL(ConfirmPaintObjForSeed);
SEND_MSG_IMPL(PaintAttackPoison);
SEND_MSG_IMPL(EnemyKick);
SEND_MSG_IMPL(RabbitKick);
SEND_MSG_IMPL(FishingAttack);
SEND_MSG_IMPL(FishingCancel);
SEND_MSG_IMPL(FishingFishApproach);
SEND_MSG_IMPL(FishingFishFloatTouch);
SEND_MSG_IMPL(FishingItemGet);
SEND_MSG_IMPL(FishingLineTouch);
SEND_MSG_IMPL(FishingStart);
SEND_MSG_IMPL(FishingUpImmediatelyPrepare);
SEND_MSG_IMPL(FireBrosFireBallCollide);
SEND_MSG_IMPL(FireSwitchFire);
SEND_MSG_IMPL(FrogHackTrample);
SEND_MSG_IMPL(GhostRecordStart);
SEND_MSG_IMPL(GhostRecordEnd);
SEND_MSG_IMPL(GhostPlay);
SEND_MSG_IMPL(GhostStop);
SEND_MSG_IMPL(GiantWanderBossAttack);
SEND_MSG_IMPL(GiantWanderBossBulletAttack);
SEND_MSG_IMPL(GiantWanderBossBulletPush);
SEND_MSG_IMPL(GhostReverse);
SEND_MSG_IMPL(GhostCancel);
SEND_MSG_IMPL(GrowFlowerSeedDisablePush);
SEND_MSG_IMPL(GrowFlowerSeedNear);
SEND_MSG_IMPL(GrowPlantPush);
SEND_MSG_IMPL(GrowerAttack);
SEND_MSG_IMPL(GrowerWallAttack);
SEND_MSG_IMPL(GunetterAttack);
SEND_MSG_IMPL(GunetterBodyTouch);
SEND_MSG_IMPL(HammerAttackDown);
SEND_MSG_IMPL(HammerAttackSide);
SEND_MSG_IMPL(HammerAttackSideCollide);
SEND_MSG_IMPL(ItemAmiiboKoopa);
SEND_MSG_IMPL(IsExistPukupuku);
SEND_MSG_IMPL(JangoAttack);
SEND_MSG_IMPL(JangoRemoveCap);
SEND_MSG_IMPL(KakkuKick);
SEND_MSG_IMPL(KillByBossBattleDemo);
SEND_MSG_IMPL(KillByHackFirstDemo);
SEND_MSG_IMPL(KillByHomeDemo);
SEND_MSG_IMPL(EndHomeDemo);
SEND_MSG_IMPL(KillByMoonRockDemo);
SEND_MSG_IMPL(KillByShineGet);
SEND_MSG_TO_ACTOR_IMPL(KillBySwitchTimer);
SEND_MSG_IMPL(KoopaBindStart);
SEND_MSG_IMPL(KoopaCapPlayerFocusTarget);
SEND_MSG_IMPL(KoopaCapPunchFinishL);
SEND_MSG_IMPL(KoopaCapPunchFinishR);
SEND_MSG_IMPL(KoopaCapPunchInvincibleL);
SEND_MSG_IMPL(KoopaCapPunchInvincibleR);
SEND_MSG_IMPL(KoopaCapPunchKnockBackL);
SEND_MSG_IMPL(KoopaCapPunchKnockBackR);
SEND_MSG_IMPL(KoopaCapPunchL);
SEND_MSG_IMPL(KoopaCapPunchR);
SEND_MSG_IMPL(KoopaCapSpinAttack);
SEND_MSG_IMPL(KoopaCatchKoopaCap);
SEND_MSG_IMPL(KoopaDashPunchAttack);
SEND_MSG_IMPL(KoopaFire2D);
SEND_MSG_IMPL(KoopaFireBallAttack);
SEND_MSG_IMPL(KoopaHackDamage);
SEND_MSG_IMPL(KoopaHackPunch);
SEND_MSG_IMPL(KoopaHackPunchCollide);
SEND_MSG_IMPL(KoopaHackTrample);
SEND_MSG_IMPL(KoopaInvalidHackPunchFaceToCollision);
SEND_MSG_IMPL(KoopaRingBeamInvalidTouch);
SEND_MSG_IMPL(KoopaTailAttack);
SEND_MSG_IMPL(KoopaTouchFloor);
SEND_MSG_IMPL(KouraAttack2D);
SEND_MSG_IMPL(KouraItemGet2D);
SEND_MSG_IMPL(LaunchBlow);
SEND_MSG_IMPL(MeganeAttack);
SEND_MSG_IMPL(MeganeHackTrample);
SEND_MSG_IMPL(MofumofuBulletUnexplosion);
SEND_MSG_IMPL(MoonBasementAttackMeteor);
SEND_MSG_IMPL(MoonBasementBreakShockwaveMeteor);
SEND_MSG_IMPL(MoonBasementRockSyncClippingRegist);
SEND_MSG_IMPL(MoonBasementRockSyncClippingInvalidate);
SEND_MSG_IMPL(MoonBasementRockSyncClippingValidate);
SEND_MSG_IMPL(AttachCactusNeedle);
SEND_MSG_COMBO_IMPL(CactusNeedleAttack);
SEND_MSG_COMBO_IMPL(CactusNeedleAttackStrong);
SEND_MSG_IMPL(PlayerBallToss);
SEND_MSG_IMPL(PlayerCarryCameraSubjectiveStart);
SEND_MSG_IMPL(PlayerCarryCameraSubjectiveEnd);
SEND_MSG_IMPL(PlayerCarryShineGetStart);
SEND_MSG_IMPL(PlayerCarryShineGetEnd);
SEND_MSG_IMPL(PlayerCapCatch);
SEND_MSG_IMPL(PlayerCapHipDrop);
SEND_MSG_IMPL(PlayerCapPush);
SEND_MSG_IMPL(PlayerCapRecovery);
SEND_MSG_IMPL(PlayerCapTouchJump);
SEND_MSG_IMPL(PlayerCapTrample);
SEND_MSG_IMPL(PlayerCoinDashGet);
SEND_MSG_IMPL(PlayerEyePriorityTarget);
SEND_MSG_IMPL(PlayerDisregardHomingAttack);
SEND_MSG_IMPL(PlayerDisregardTargetMarker);
SEND_MSG_IMPL(PlayerEquipKoopaCap);
SEND_MSG_IMPL(PlayerFireBallAttack2D);
SEND_MSG_IMPL(PlayerFireBallAttack3D);
SEND_MSG_IMPL(PlayerHipDropDemoTrigger);
SEND_MSG_IMPL(PlayerHipDropHipDropSwitch);
SEND_MSG_IMPL(PlayerItemGet2D);
SEND_MSG_IMPL(PlayerJumpTakeOffFloor);
SEND_MSG_IMPL(PlayerObjectWallHit);
SEND_MSG_IMPL(PlayerObjLeapFrog);
SEND_MSG_IMPL(PlayerPenguinAttack);
SEND_MSG_IMPL(PlayerPenguinAttackReflect);
SEND_MSG_IMPL(PlayerPoleClimbKeep);
SEND_MSG_IMPL(PlayerPoleClimbReaction);
SEND_MSG_IMPL(PlayerRabbitGet);
SEND_MSG_IMPL(PlayerRollingObjHit);
SEND_MSG_IMPL(PlayerRollingWallHitDown);
SEND_MSG_IMPL(PlayerRollingWallHitMove);
SEND_MSG_IMPL(PlayerStartGrabCeil);
SEND_MSG_IMPL(PlayerStartWallJump);
SEND_MSG_IMPL(PlayerEndGrabCeil);
SEND_MSG_IMPL(PlayerSwordAttack);
SEND_MSG_IMPL(PlayerTouchFloorJumpCode);
SEND_MSG_IMPL(PlayerTrample2D);
SEND_MSG_IMPL(PlayerUpperPunch2D);
SEND_MSG_IMPL(PlayerObjUpperPunch2D);
SEND_MSG_IMPL(PukupukuDash);
SEND_MSG_IMPL(PukupukuKiss);
SEND_MSG_IMPL(PukupukuRollingAttack);
SEND_MSG_IMPL(Push2D);
SEND_MSG_IMPL(PushToFish);
SEND_MSG_IMPL(PushToMotorcycle);
SEND_MSG_IMPL(PushToPlayer);
SEND_MSG_IMPL(RadishAttack);
SEND_MSG_IMPL(RadishReflect);

bool sendMsgRaceStart(al::LiveActor* receiver){
    SensorMsgRaceStart msg;
    return receiver->receiveMsg(&msg, nullptr, nullptr); 
}

bool sendMsgRaceStop(al::LiveActor* receiver){
    SensorMsgRaceStop msg;
    return receiver->receiveMsg(&msg, nullptr, nullptr); 
}

bool sendMsgRaceWait(al::LiveActor* receiver){
    SensorMsgRaceWait msg;
    return receiver->receiveMsg(&msg, nullptr, nullptr); 
}

SEND_MSG_IMPL(RequestChangeKinokoSuper);
SEND_MSG_IMPL(RequestChangeFireFlower);
SEND_MSG_IMPL(RequestPlayerSandMoon);
SEND_MSG_IMPL(RequestPlayerSnow);
SEND_MSG_IMPL(RequestPlayerWet);
SEND_MSG_IMPL(StartHack);
SEND_MSG_IMPL(SunshineAttack);
SEND_MSG_IMPL(CancelHack);
SEND_MSG_IMPL(CancelHackArea);
SEND_MSG_IMPL(CancelHackByDokan);
SEND_MSG_IMPL(PackunEatStart);
SEND_MSG_IMPL(HackAttack);
SEND_MSG_IMPL(HackAttackKick);
SEND_MSG_IMPL(HackAttackMapObj);
SEND_MSG_IMPL(HackDeathAreaSelfCheck);
SEND_MSG_IMPL(HackDemoEnd);
SEND_MSG_IMPL(HackDemoStart);
SEND_MSG_IMPL(HackInvalidEscape);
SEND_MSG_IMPL(HackInvalidEscapeNoReaction);
SEND_MSG_IMPL(HackMarioCheckpointFlagWarp);
SEND_MSG_IMPL(HackMarioDead);
SEND_MSG_IMPL(HackMarioDemo);
SEND_MSG_IMPL(HackMarioInWater);
SEND_MSG_IMPL(HackMoveRockForestPush);
SEND_MSG_IMPL(HackSelfCeilingCheckMiss);
SEND_MSG_IMPL(HackSyncDamageVisibility);
SEND_MSG_IMPL(WeaponItemGet);
SEND_MSG_IMPL(CapAttack);
SEND_MSG_IMPL(CapAttackCollide);
SEND_MSG_IMPL(CapAttackStayRolling);
SEND_MSG_IMPL(CapAttackStayRollingCollide);
SEND_MSG_IMPL(CapAttackRailMove);
SEND_MSG_IMPL(CapGiantAttack);
SEND_MSG_IMPL(CapReflect);
SEND_MSG_IMPL(CapReflectCollide);
SEND_MSG_IMPL(CapStartLockOn);
SEND_MSG_IMPL(CapKeepLockOn);
SEND_MSG_IMPL(CapCancelLockOn);
SEND_MSG_IMPL(CapHipDrop);
SEND_MSG_IMPL(CapObjHipDrop);
SEND_MSG_IMPL(CapObjHipDropReflect);
SEND_MSG_IMPL(CapIgnoreCancelLockOn);
SEND_MSG_IMPL(CapIgnoreCancelMissReaction);
SEND_MSG_IMPL(CapIgnoreCollisionCheck);
SEND_MSG_IMPL(CapItemGet);
SEND_MSG_IMPL(CapTrampolineAttack);
SEND_MSG_IMPL(CatchBombThrough);
SEND_MSG_IMPL(CheckCarObstacle);
SEND_MSG_IMPL(CheckIsCardboardBox);
SEND_MSG_IMPL(BullHackAttack);
SEND_MSG_IMPL(BullEnemyAttack);
SEND_MSG_IMPL(EnemyAttackStrong);
SEND_MSG_IMPL(EnemyObjBreak);
SEND_MSG_IMPL(WhipAttack);
SEND_MSG_DATA_IMPL(WhipBind, WhipTargetInfo*);
SEND_MSG_DATA_IMPL(WhipHold, WhipTargetInfo*);
SEND_MSG_DATA_IMPL(WhipThrow, const sead::Vector3f&);
SEND_MSG_IMPL(NoLimitTouchJump);
SEND_MSG_IMPL(NoticePlayerDamage);
SEND_MSG_IMPL(StatueDrop);
SEND_MSG_IMPL(StatueTrampleReflect);
SEND_MSG_IMPL(StatuePush);
SEND_MSG_IMPL(StatueSnap);
SEND_MSG_IMPL(HitGrowFlowerPot);
SEND_MSG_IMPL(HitGrowPlantPot);
SEND_MSG_IMPL(ImplantGrowFlowerSeed);
SEND_MSG_IMPL(IcicleAttack);
SEND_MSG_IMPL(IgnoreMirrorWarp);
SEND_MSG_IMPL(IgnoredByRunawayNpc);
SEND_MSG_IMPL(IgnorePushMotorcycle);
SEND_MSG_IMPL(SandSharkAttack);
SEND_MSG_IMPL(SeedAttack);
SEND_MSG_IMPL(SeedAttackBig);
SEND_MSG_IMPL(SeedAttackHold);
SEND_MSG_IMPL(SeedItemGet);
SEND_MSG_IMPL(SeedReflect);
SEND_MSG_IMPL(SenobiTrample);
SEND_MSG_IMPL(SenobiCancelStretch);
SEND_MSG_IMPL(SenobiPunchBlockTransparent);
SEND_MSG_IMPL(ShibakenApproach);
SEND_MSG_IMPL(ShibakenKick);
SEND_MSG_IMPL(HackUpperPunch);
SEND_MSG_IMPL(HackObjUpperPunch);
SEND_MSG_IMPL(ShineGet);
SEND_MSG_IMPL(ShineGet2D);
SEND_MSG_IMPL(SphinxJumpAttack);
SEND_MSG_IMPL(SphinxQuizRouteKill);
SEND_MSG_IMPL(SphinxRideAttack);
SEND_MSG_IMPL(SphinxRideAttackReflect);
SEND_MSG_IMPL(PechoSpot);
SEND_MSG_IMPL(BelowObjBroken);
SEND_MSG_IMPL(BindCollidedGround);
SEND_MSG_IMPL(BindKeepDemoStart);
SEND_MSG_IMPL(BindKeepDemoExecute);
SEND_MSG_IMPL(BindKeepDemoEnd);
SEND_MSG_IMPL(BindRecoveryLife);
SEND_MSG_IMPL(MayorItemReflect);
SEND_MSG_IMPL(MayorItemCollide);
SEND_MSG_IMPL(BlowObjAttack);
SEND_MSG_IMPL(BlowObjAttackReflect);
SEND_MSG_IMPL(ConfirmFrailBox);
SEND_MSG_IMPL(ConfirmBrokenFrailBox);
SEND_MSG_IMPL(TankLookOn);
SEND_MSG_IMPL(TankKickHack);
SEND_MSG_IMPL(TankKickEnemy);
SEND_MSG_IMPL(TankBullet);
SEND_MSG_IMPL(TankBulletNoReaction);
SEND_MSG_TO_ACTOR_IMPL(TimerAthleticDemoStart);
SEND_MSG_IMPL(RideOnStart);
SEND_MSG_IMPL(RideOnEnd);
SEND_MSG_IMPL(RideOnRelease);
SEND_MSG_IMPL(HipDropTransformTransform);
SEND_MSG_IMPL(HipDropTransformReverse);
SEND_MSG_IMPL(HipDropTransformingUp);
SEND_MSG_IMPL(HipDropTransformingDown);
SEND_MSG_IMPL(HipDropTransformingFinish);
SEND_MSG_IMPL(ClearFire);
SEND_MSG_IMPL(CollectAnimalTouchCollide);
SEND_MSG_IMPL(BossKnuckleCounter);
SEND_MSG_IMPL(BossKnuckleFallAttack);
SEND_MSG_IMPL(BossKnuckleHackAttack);
SEND_MSG_IMPL(BossKnuckleKillerAttack);
SEND_MSG_IMPL(BossKnuckleIceConflict);
SEND_MSG_IMPL(BossKnuckleIceFallToMummy);
SEND_MSG_IMPL(SkaterAttack);
SEND_MSG_IMPL(EnableInSaucePan);
SEND_MSG_IMPL(EnableMapCheckPointWarp);
SEND_MSG_DATA_IMPL(StartInSaucePan, bool);
SEND_MSG_IMPL(EndInSaucePan);
SEND_MSG_IMPL(LineDancerLink);
SEND_MSG_IMPL(LongPushSensorHit);
SEND_MSG_IMPL(LongPushBoxHit);
SEND_MSG_IMPL(GoldHammerAttack);
SEND_MSG_IMPL(TrashBoxIn);
SEND_MSG_IMPL(TouchDoorDrumn);
SEND_MSG_IMPL(Kuribo2DTouch);
SEND_MSG_IMPL(KuriboCollisionDamage);
SEND_MSG_IMPL(KuriboCollisionKill);
SEND_MSG_IMPL(KuriboFlick);
SEND_MSG_IMPL(PartyPopperSoundAttack);
SEND_MSG_IMPL(YokinBallAttack);
SEND_MSG_IMPL(YoshiDirectEat);
SEND_MSG_IMPL(YoshiTongueAttack);
SEND_MSG_DATA_MULTI_IMPL(YoshiTongueEatBind, (f32*, Float1), (f32*, Float2), (f32, Float3));
SEND_MSG_IMPL(YoshiTongueEatBindCancel);
SEND_MSG_IMPL(YoshiTongueEatBindFinish);
SEND_MSG_IMPL(YoshiTongueEatHomingTarget);
SEND_MSG_IMPL(YukimaruPush);
SEND_MSG_IMPL(PunchMachinePunchStraight);
SEND_MSG_IMPL(PunchMachinePunchHook);
SEND_MSG_IMPL(PunchMachinePunchUpper);
SEND_MSG_IMPL(MorningStarWarpStart);
SEND_MSG_IMPL(MorningStarWarpEnd);
SEND_MSG_IMPL(GemyAim);
SEND_MSG_IMPL(HammerBrosHammerEnemyAttack);
SEND_MSG_IMPL(HammerBrosHammerHackAttack);
SEND_MSG_IMPL(HammerBrosHammerSearch);
SEND_MSG_IMPL(HackBrosContact);
SEND_MSG_IMPL(MotorcycleAttack);
SEND_MSG_IMPL(MotorcycleCollideParkingLot);
SEND_MSG_IMPL(MotorcycleDashAttack);
SEND_MSG_IMPL(MotorcycleDashCollide);
SEND_MSG_IMPL(WanwanEnemyAttack);
SEND_MSG_IMPL(WanwanPush);
SEND_MSG_IMPL(WanwanReboundAttack);
SEND_MSG_IMPL(WanwanBlockAttack);
SEND_MSG_IMPL(WanwanHoleIn);
SEND_MSG_IMPL(WaterRoadIn);
SEND_MSG_IMPL(WaterRoadNear);
SEND_MSG_IMPL(BreedaSlap);
SEND_MSG_IMPL(BreedaPush);
SEND_MSG_IMPL(GamaneBullet);
SEND_MSG_IMPL(GamaneBulletThrough);
SEND_MSG_IMPL(GamaneBulletForCoinFlower);
SEND_MSG_IMPL(VolleyballNpcScareByEnemy);
SEND_MSG_IMPL(RocketFlowerExtension);
SEND_MSG_IMPL(WanderBossCameraRange);
SEND_MSG_IMPL(KuriboGirlAttack);
SEND_MSG_IMPL(KuriboGirlLove);
SEND_MSG_IMPL(KuriboTop);
SEND_MSG_IMPL(TRexAttack);
SEND_MSG_IMPL(TRexAttackCollideBody);
SEND_MSG_IMPL(TRexAttackCollideHead);
SEND_MSG_IMPL(TRexDashAttack);
SEND_MSG_IMPL(TRexScrollPartsBreakWith);
SEND_MSG_IMPL(TsukkunForceCancelCollide);
SEND_MSG_IMPL(TsukkunHoldCollide);
SEND_MSG_IMPL(TsukkunThroughCollide);
SEND_MSG_IMPL(TsukkunNoTrace);
SEND_MSG_IMPL(TouchFireDrum2D);
SEND_MSG_IMPL(PropellerAttack);
SEND_MSG_IMPL(TankExplosion);
SEND_MSG_IMPL(TankHackTrample);
SEND_MSG_IMPL(UtsuboAttack);
SEND_MSG_IMPL(KillerAttackNoExplode);
SEND_MSG_IMPL(KillerMagnumAttack);
SEND_MSG_IMPL(KillerMagnumHackAttack);
SEND_MSG_IMPL(GabuzouAttack);
SEND_MSG_IMPL(StackerRollingAttack);
SEND_MSG_IMPL(StackerCapBoostAttack);
SEND_MSG_IMPL(IgnoreIgnitionBomb);
SEND_MSG_IMPL(ExplosionReflectBomb);
SEND_MSG_IMPL(GolemStampPress);

bool sendMsgSwitchOnWithSaveRequest(al::LiveActor* actor, SaveObjInfo* info){
    SensorMsgSwitchOnWithSaveRequest msg(info);
    return alActorSensorFunction::sendMsgToActorUnusedSensor(msg, actor);
}

bool sendMsgWanwanReboundAttackToCollided(const al::LiveActor* actor, al::HitSensor* source){
    al::HitSensor* collidedSensor = al::tryGetCollidedSensor(actor);
    return collidedSensor && alActorSensorFunction::sendMsgSensorToSensor(SensorMsgWanwanReboundAttack(), source, collidedSensor);
}

bool sendMsgWanwanBlockAttackToCollided(const al::LiveActor* actor, al::HitSensor* source){
    al::HitSensor* collidedSensor = al::tryGetCollidedSensor(actor);
    return collidedSensor && alActorSensorFunction::sendMsgSensorToSensor(SensorMsgWanwanBlockAttack(), source, collidedSensor);
}

SEND_MSG_DATA_IMPL(DigPointSmell, DigPoint*);
SEND_MSG_DATA_IMPL(MofumofuBodyChainExplode, s32);
SEND_MSG_DATA_IMPL(MoonBasementRockThroughCollision, bool);
SEND_MSG_DATA_IMPL(FishingWait, al::HitSensor*);

//NON_MATCHING
SEND_MSG_DATA_MULTI_IMPL(FishingUpImmediately, (const sead::Matrix34f&, UnkMtx), (const sead::Vector3f&, unk2), (const char*, unk3));
SEND_MSG_DATA_MULTI_IMPL(GunetterPush, (const sead::Vector3f&, unk), (f32, unk2));
SEND_MSG_DATA_MULTI_IMPL(TestPunch, (const sead::Vector3f&, UnkVec), (s32, unk2), (s32, unk3));
SEND_MSG_DATA_MULTI_IMPL(TestPunchStrong, (const sead::Vector3f&, UnkVec), (s32, unk2), (s32, unk3));
SEND_MSG_DATA_MULTI_IMPL(PunchGuard, (s32, unk), (s32, unk2));
SEND_MSG_DATA_MULTI_IMPL(TsukkunThrust, (const sead::Vector3f&, UnkVec), (s32, unk2), (bool, unk3));
SEND_MSG_DATA_MULTI_IMPL(TsukkunThrustSpin, (const sead::Vector3f&, UnkVec), (s32, unk2), (bool, unk3));
SEND_MSG_DATA_MULTI_IMPL(TsukkunThrustReflect, (const sead::Vector3f&, UnkVec), (s32, unk2), (bool, unk3));
SEND_MSG_DATA_MULTI_IMPL(TsukkunThrustCollide, (const sead::Vector3f&, UnkVec), (s32, unk2), (bool, unk3));
SEND_MSG_DATA_MULTI_IMPL(TsukkunThrustHitReflectCollide, (const sead::Vector3f&, UnkVec), (s32, unk2), (bool, unk3));
SEND_MSG_DATA_MULTI_IMPL(TsukkunThrustReflectCollide, (const sead::Vector3f&, UnkVec), (s32, unk2), (bool, unk3));
SEND_MSG_DATA_MULTI_IMPL(TsukkunThrustHole, (const sead::Vector3f&, UnkVec), (const sead::Vector3f&, unk2));
//----------------------

SEND_MSG_IMPL(CapBeamerBeam);
SEND_MSG_IMPL(HosuiAttack);
SEND_MSG_IMPL(HosuiAttackCollide);
SEND_MSG_IMPL(HosuiAttackNoEffect);
SEND_MSG_IMPL(HosuiAttackStrong);
SEND_MSG_IMPL(HosuiTouch);
SEND_MSG_IMPL(HosuiTrample);
SEND_MSG_IMPL(HosuiTrampleReflect);
SEND_MSG_IMPL(HosuiTrampleReflectHigh);
SEND_MSG_IMPL(BubbleAttack);
SEND_MSG_IMPL(BubbleAttackToPecho);
SEND_MSG_IMPL(BubbleReflectH);
SEND_MSG_IMPL(BubbleReflectV);
SEND_MSG_IMPL(BubbleWallTouch);
SEND_MSG_IMPL(BubbleGroundTouchTrigger);
SEND_MSG_IMPL(BubbleLauncherStart);




IS_MSG_IMPL(AckCheckpoint);
IS_MSG_IMPL(AckGetShine);
IS_MSG_IMPL(AckLifeUp);
IS_MSG_IMPL(AckLifeMaxUp);
IS_MSG_IMPL(AskRailCollision);
IS_MSG_IMPL(AttachCactusNeedle);
IS_MSG_IMPL(AirExplosion);
IS_MSG_IMPL(BelowObjBroken);
IS_MSG_IMPL(BindCollidedGround);
IS_MSG_IMPL(BindKeepDemoStart);
IS_MSG_IMPL(BindKeepDemoExecute);
IS_MSG_IMPL(BindKeepDemoEnd);
IS_MSG_IMPL(BindRecoveryLife);
IS_MSG_IMPL(BirdFlyAway);
IS_MSG_IMPL(BlowObjAttack);
IS_MSG_IMPL(MayorItemCollide);
IS_MSG_IMPL(MayorItemReflect);
IS_MSG_IMPL(BlowObjAttackReflect);
IS_MSG_IMPL(BossKnuckleCounter);
IS_MSG_IMPL(BossKnuckleFallAttack);
IS_MSG_IMPL(BossKnuckleHackAttack);
IS_MSG_IMPL(BossKnuckleIceConflict);
IS_MSG_IMPL(BossKnuckleIceFallToMummy);
IS_MSG_IMPL(BossKnuckleKillerAttack);
IS_MSG_IMPL(BreakPartsBreak);
IS_MSG_IMPL(BreedaSlap);
IS_MSG_IMPL(BreedaPush);
IS_MSG_IMPL(BubbleAttack);
IS_MSG_IMPL(BubbleAttackToPecho);
IS_MSG_IMPL(BubbleLauncherStart);
IS_MSG_IMPL(BubbleReflectH);
IS_MSG_IMPL(BubbleReflectV);
IS_MSG_IMPL(BubbleWallTouch);
IS_MSG_IMPL(BubbleGroundTouchTrigger);
IS_MSG_IMPL(BullAttack);
IS_MSG_IMPL(BullHackAttack);
IS_MSG_IMPL(BullEnemyAttack);
IS_MSG_IMPL(ByugoBlow);
IS_MSG_IMPL(CameraAngleElevationResetFast);
IS_MSG_IMPL(CancelHack);
IS_MSG_IMPL(CancelHackArea);
IS_MSG_IMPL(CancelHackByDokan);
IS_MSG_IMPL(CapAttack);
IS_MSG_IMPL(CapAttackCollide);
IS_MSG_IMPL(CapAttackRailMove);
IS_MSG_IMPL(CapAttackStayRolling);
IS_MSG_IMPL(CapAttackStayRollingCollide);
IS_MSG_IMPL(CapBeamerBeam);
IS_MSG_IMPL(CapCancelLockOn);
IS_MSG_IMPL(CapChangeGiant);
IS_MSG_IMPL(CapEnableLockOn);
IS_MSG_IMPL(CapStartLockOn);
IS_MSG_IMPL(CapKeepLockOn);
IS_MSG_IMPL(CapGiantAttack);
IS_MSG_IMPL(CapHipDrop);
IS_MSG_IMPL(CapObjHipDrop);
IS_MSG_IMPL(CapObjHipDropReflect);
IS_MSG_IMPL(CapIgnoreCancelLockOn);
IS_MSG_IMPL(CapIgnoreCancelMissReaction);
IS_MSG_IMPL(CapIgnoreCollisionCheck);
IS_MSG_IMPL(CapItemGet);
IS_MSG_IMPL(CapReflect);
IS_MSG_IMPL(CapReflectCollide);
IS_MSG_IMPL(CapRethrow);
IS_MSG_IMPL(CapTouchWall);
IS_MSG_IMPL(CapTrampolineAttack);
IS_MSG_IMPL(CatchBombThrough);
IS_MSG_IMPL(CheckCarObstacle);
IS_MSG_IMPL(CheckIsCardboardBox);
IS_MSG_IMPL(ChorobonAttack);
IS_MSG_IMPL(ClearFire);
IS_MSG_IMPL(CollectAnimalTouchCollide);
IS_MSG_IMPL(CollisionImpulse);
IS_MSG_IMPL(ConductLightning);
IS_MSG_IMPL(ConfirmFrailBox);
IS_MSG_IMPL(ConfirmBrokenFrailBox);
IS_MSG_IMPL(DamageBallAttack);
IS_MSG_IMPL(DamageBallBodyAttack);
IS_MSG_IMPL(DigPointSmell);
IS_MSG_IMPL(DonsukeAttack);
IS_MSG_IMPL(DonsukeGroundAttack);
IS_MSG_IMPL(DonsukePush);
IS_MSG_IMPL(DragonAttack);
IS_MSG_IMPL(EatExplosion);
IS_MSG_IMPL(ElectricWireNoLimitDistance);
IS_MSG_IMPL(EnableInSaucePan);
IS_MSG_IMPL(EnableMapCheckPointWarp);
IS_MSG_IMPL(EndInSaucePan);
IS_MSG_IMPL(EnemyAttack2D);
IS_MSG_IMPL(EnemyAttack3D);
IS_MSG_IMPL(EnemyAttackDash);
IS_MSG_IMPL(FireBrosFireBallCollide);
//IS_MSG_IMPL(FireDamageAll);
IS_MSG_IMPL(HackAttackFire);
IS_MSG_IMPL(FireSwitchFire);
IS_MSG_IMPL(EnemyAttackFireCollision);
IS_MSG_IMPL(EnemyAttackTRex);
//IS_MSG_IMPL(PoisonDamageAll);
IS_MSG_IMPL(EnemyAttackPoison);
IS_MSG_IMPL(HackAttackPoison);
IS_MSG_IMPL(PaintAttackPoison);
IS_MSG_IMPL(ConfirmPaintObj);
IS_MSG_IMPL(ConfirmPaintObjForSeed);
IS_MSG_IMPL(EnemyAttackStrong);
IS_MSG_IMPL(EnemyKick);
IS_MSG_IMPL(RabbitKick);
IS_MSG_IMPL(EnemyObjBreak);
IS_MSG_IMPL(FireBlowerAttack);
IS_MSG_IMPL(FishingAttack);
IS_MSG_IMPL(FishingCancel);
IS_MSG_IMPL(FishingFishApproach);
IS_MSG_IMPL(FishingFishFloatTouch);
IS_MSG_IMPL(FishingItemGet);
IS_MSG_IMPL(FishingLineTouch);
IS_MSG_IMPL(FishingStart);
IS_MSG_IMPL(FishingUpImmediately);
IS_MSG_IMPL(FishingUpImmediatelyPrepare);
IS_MSG_IMPL(FishingWait);
IS_MSG_IMPL(FrogHackTrample);
IS_MSG_IMPL(GamaneBullet);
IS_MSG_IMPL(GamaneBulletThrough);
IS_MSG_IMPL(GamaneBulletForCoinFlower);
IS_MSG_IMPL(GemyAim);
IS_MSG_IMPL(GhostCancel);
IS_MSG_IMPL(GhostPlay);
IS_MSG_IMPL(GhostRecordEnd);
IS_MSG_IMPL(GhostRecordStart);
IS_MSG_IMPL(GhostRecordStartOk);
IS_MSG_IMPL(GhostReverse);
IS_MSG_IMPL(GhostStop);
IS_MSG_IMPL(GiantWanderBossAttack);
IS_MSG_IMPL(GiantWanderBossBulletAttack);
IS_MSG_IMPL(GiantWanderBossBulletPush);
IS_MSG_IMPL(GoldHammerAttack);
IS_MSG_IMPL(GrowFlowerSeedDisablePush);
IS_MSG_IMPL(GrowFlowerSeedNear);
IS_MSG_IMPL(GrowPlantPush);
IS_MSG_IMPL(GrowerAttack);
IS_MSG_IMPL(GrowerWallAttack);
IS_MSG_IMPL(GunetterAttack);
IS_MSG_IMPL(GunetterBodyTouch);
IS_MSG_IMPL(GunetterPush);
IS_MSG_IMPL(HackAttack);
IS_MSG_IMPL(HackAttackKick);
IS_MSG_IMPL(HackAttackMapObj);
IS_MSG_IMPL(HackBrosContact);
IS_MSG_IMPL(HackDeathAreaSelfCheck);
IS_MSG_IMPL(HackDemoEnd);
IS_MSG_IMPL(HackDemoStart);
IS_MSG_IMPL(HackInvalidEscape);
IS_MSG_IMPL(HackInvalidEscapeNoReaction);
IS_MSG_IMPL(HackMarioCheckpointFlagWarp);
IS_MSG_IMPL(HackMarioDead);
IS_MSG_IMPL(HackMarioDemo);
IS_MSG_IMPL(HackMarioInWater);
IS_MSG_IMPL(HackMoveRockForestPush);
IS_MSG_IMPL(HackSelfCeilingCheckMiss);
IS_MSG_IMPL(HackSyncDamageVisibility);
IS_MSG_IMPL(HackUpperPunch);
IS_MSG_IMPL(HackObjUpperPunch);
IS_MSG_IMPL(HammerAttackDown);
IS_MSG_IMPL(HammerAttackSide);
IS_MSG_IMPL(HammerAttackSideCollide);
IS_MSG_IMPL(HammerBrosHammerEnemyAttack);
IS_MSG_IMPL(HammerBrosHammerHackAttack);
IS_MSG_IMPL(HammerBrosHammerSearch);
IS_MSG_IMPL(HipDropTransformReverse);
IS_MSG_IMPL(HipDropTransformTransform);
IS_MSG_IMPL(HipDropTransformingUp);
IS_MSG_IMPL(HipDropTransformingDown);
IS_MSG_IMPL(HipDropTransformingFinish);
IS_MSG_IMPL(HitGrowFlowerPot);
IS_MSG_IMPL(HitGrowPlantPot);
IS_MSG_IMPL(HosuiAttack);
IS_MSG_IMPL(HosuiAttackCollide);
IS_MSG_IMPL(HosuiAttackNoEffect);
IS_MSG_IMPL(HosuiAttackStrong);
IS_MSG_IMPL(HosuiTouch);
IS_MSG_IMPL(HosuiTrample);
IS_MSG_IMPL(HosuiTrampleReflect);
IS_MSG_IMPL(HosuiTrampleReflectHigh);
IS_MSG_IMPL(IgnoreTouchTarget);
IS_MSG_IMPL(IgnorePushMotorcycle);
IS_MSG_IMPL(IcicleAttack);
IS_MSG_IMPL(IgnoreMirrorWarp);
IS_MSG_IMPL(IgnoredByRunawayNpc);
IS_MSG_IMPL(ImplantGrowFlowerSeed);
IS_MSG_IMPL(InitTouchTargetInfo);
IS_MSG_IMPL(ItemAmiiboKoopa);
IS_MSG_IMPL(IsExistPukupuku);
IS_MSG_IMPL(JangoAttack);
IS_MSG_IMPL(JangoRemoveCap);
IS_MSG_IMPL(KakkuKick);
IS_MSG_IMPL(KoopaBindStart);
IS_MSG_IMPL(KoopaCapPlayerFocusTarget);
IS_MSG_IMPL(KoopaCapPunchFinishL);
IS_MSG_IMPL(KoopaCapPunchFinishR);
IS_MSG_IMPL(KoopaCapPunchInvincibleL);
IS_MSG_IMPL(KoopaCapPunchInvincibleR);
IS_MSG_IMPL(KoopaCapPunchKnockBackL);
IS_MSG_IMPL(KoopaCapPunchKnockBackR);
IS_MSG_IMPL(KoopaCapPunchL);
IS_MSG_IMPL(KoopaCapPunchR);
IS_MSG_IMPL(KoopaCapSpinAttack);
IS_MSG_IMPL(KoopaCatchKoopaCap);
IS_MSG_IMPL(KoopaDashPunchAttack);
IS_MSG_IMPL(KoopaFire2D);
IS_MSG_IMPL(KoopaFireBallAttack);
IS_MSG_IMPL(KoopaHackDamage);
IS_MSG_IMPL(KoopaHackPunch);
IS_MSG_IMPL(KoopaHackPunchCollide);
IS_MSG_IMPL(KoopaHackTrample);
IS_MSG_IMPL(KoopaInvalidHackPunchFaceToCollision);
IS_MSG_IMPL(KoopaRingBeamInvalidTouch);
IS_MSG_IMPL(KoopaTailAttack);
IS_MSG_IMPL(KoopaTouchFloor);
IS_MSG_IMPL(KouraAttack2D);
IS_MSG_IMPL(KouraItemGet2D);
IS_MSG_IMPL(Kuribo2DTouch);
IS_MSG_IMPL(KuriboCollisionDamage);
IS_MSG_IMPL(KuriboCollisionKill);
IS_MSG_IMPL(KuriboFlick);
IS_MSG_IMPL(KuriboGirlAttack);
IS_MSG_IMPL(KuriboGirlLove);
IS_MSG_IMPL(KuriboTop);
IS_MSG_IMPL(KuriboTowerNum);
IS_MSG_IMPL(LaunchBlow);
IS_MSG_IMPL(LineDancerLink);
IS_MSG_IMPL(LongPushSensorHit);
IS_MSG_IMPL(LongPushBoxHit);
IS_MSG_IMPL(MagnetBulletAttack);
IS_MSG_IMPL(MeganeAttack);
IS_MSG_IMPL(MeganeHackTrample);
IS_MSG_IMPL(MofumofuBodyChainExplode);
IS_MSG_IMPL(MofumofuBulletUnexplosion);
IS_MSG_IMPL(MoonBasementAttackMeteor);
IS_MSG_IMPL(MoonBasementBreakShockwaveMeteor);
IS_MSG_IMPL(MoonBasementRockSyncClippingRegist);
IS_MSG_IMPL(MoonBasementRockSyncClippingInvalidate);
IS_MSG_IMPL(MoonBasementRockSyncClippingValidate);
IS_MSG_IMPL(MoonBasementRockThroughCollision);
IS_MSG_IMPL(MorningStarWarpEnd);
IS_MSG_IMPL(MorningStarWarpStart);
IS_MSG_IMPL(MotorcycleAttack);
IS_MSG_IMPL(MotorcycleCollideParkingLot);
IS_MSG_IMPL(MotorcycleDashAttack);
IS_MSG_IMPL(MotorcycleDashCollide);
IS_MSG_IMPL(CactusNeedleAttack);
IS_MSG_IMPL(CactusNeedleAttackStrong);
IS_MSG_IMPL(NoLimitTouchJump);
IS_MSG_IMPL(NoticePlayerDamage);
IS_MSG_IMPL(NpcScareByEnemy);
IS_MSG_IMPL(VolleyballNpcScareByEnemy);
IS_MSG_IMPL(ObjSnapForce);
IS_MSG_IMPL(PackunEatCancel);
IS_MSG_IMPL(PackunEatEnd);
IS_MSG_IMPL(PackunEatStart);
IS_MSG_IMPL(PackunEatStartFollow);
IS_MSG_IMPL(Paint);
IS_MSG_IMPL(PaintTexture);
IS_MSG_IMPL(CheckPaintClear);
IS_MSG_IMPL(CheckPaintAlpha);
IS_MSG_IMPL(PartyPopperSoundAttack);
IS_MSG_IMPL(PechoSpot);
IS_MSG_IMPL(PlayerBallToss);
IS_MSG_IMPL(PlayerCarryCameraSubjectiveStart);
IS_MSG_IMPL(PlayerCarryCameraSubjectiveEnd);
IS_MSG_IMPL(PlayerCarryShineGetStart);
IS_MSG_IMPL(PlayerCarryShineGetEnd);
IS_MSG_IMPL(PlayerCapCatch);
IS_MSG_IMPL(PlayerCapHipDrop);
IS_MSG_IMPL(PlayerCapPush);
IS_MSG_IMPL(PlayerCapRecovery);
IS_MSG_IMPL(PlayerCapTouchJump);
IS_MSG_IMPL(PlayerCapTrample);
IS_MSG_IMPL(PlayerCoinDashGet);
IS_MSG_IMPL(PlayerEyePriorityTarget);
IS_MSG_IMPL(PlayerDisregardHomingAttack);
IS_MSG_IMPL(PlayerDisregardTargetMarker);
IS_MSG_IMPL(PlayerEquipKoopaCap);
IS_MSG_IMPL(PlayerFireBallAttack2D);
IS_MSG_IMPL(PlayerFireBallAttack3D);
IS_MSG_IMPL(PlayerHipDropDemoTrigger);
IS_MSG_IMPL(PlayerHipDropHipDropSwitch);
IS_MSG_IMPL(PlayerItemGet2D);
IS_MSG_IMPL(PlayerJumpTakeOffFloor);
IS_MSG_IMPL(PlayerObjectWallHit);
IS_MSG_IMPL(PlayerObjLeapFrog);
IS_MSG_IMPL(PlayerPenguinAttack);
IS_MSG_IMPL(PlayerPenguinAttackReflect);
IS_MSG_IMPL(PlayerPoleClimbKeep);
IS_MSG_IMPL(PlayerPoleClimbReaction);
IS_MSG_IMPL(PlayerRabbitGet);
IS_MSG_IMPL(PlayerRollingObjHit);
IS_MSG_IMPL(PlayerRollingWallHitDown);
IS_MSG_IMPL(PlayerRollingWallHitMove);
IS_MSG_IMPL(PlayerStartGrabCeil);
IS_MSG_IMPL(PlayerStartWallJump);
IS_MSG_IMPL(PlayerEndGrabCeil);
IS_MSG_IMPL(PlayerSwordAttack);
IS_MSG_IMPL(PlayerTouchFloorJumpCode);
IS_MSG_IMPL(PlayerTrample2D);
IS_MSG_IMPL(PlayerUpperPunch2D);
IS_MSG_IMPL(PlayerObjUpperPunch2D);
IS_MSG_IMPL(PropellerAttack);
IS_MSG_IMPL(PukupukuDash);
IS_MSG_IMPL(PukupukuKiss);
IS_MSG_IMPL(PukupukuRollingAttack);
IS_MSG_IMPL(PunchMachinePunchHook);
IS_MSG_IMPL(PunchMachinePunchStraight);
IS_MSG_IMPL(PunchMachinePunchUpper);
IS_MSG_IMPL(Push2D);
IS_MSG_IMPL(PushToFish);
IS_MSG_IMPL(PushToMotorcycle);
IS_MSG_IMPL(PushToPlayer);
IS_MSG_IMPL(RadishAttack);
IS_MSG_IMPL(RadishReflect);
IS_MSG_IMPL(RaceStart);
IS_MSG_IMPL(RaceStop);
IS_MSG_IMPL(RaceWait);
IS_MSG_IMPL(RequestChangeFireFlower);
IS_MSG_IMPL(RequestChangeKinokoSuper);
IS_MSG_IMPL(RequestPlayerJumpBreakFloor);
IS_MSG_IMPL(RequestPlayerJump);
IS_MSG_IMPL(RequestPlayerTrampleJump);
IS_MSG_IMPL(RequestPlayerSpinJump);
IS_MSG_IMPL(RequestSphinxJump);
IS_MSG_IMPL(RideOnEnd);
IS_MSG_IMPL(RideOnRelease);
IS_MSG_IMPL(RideOnStart);
IS_MSG_IMPL(RocketFlowerExtension);
IS_MSG_IMPL(SandSharkAttack);
IS_MSG_IMPL(SeedAttack);
IS_MSG_IMPL(SeedAttackBig);
IS_MSG_IMPL(SeedAttackHold);
IS_MSG_IMPL(SeedItemGet);
IS_MSG_IMPL(SeedReflect);
IS_MSG_IMPL(SeedTouch);
IS_MSG_IMPL(SenobiCancelStretch);
IS_MSG_IMPL(SenobiPunchBlockTransparent);
IS_MSG_IMPL(SenobiPartsMove);
IS_MSG_IMPL(SenobiTrample);
IS_MSG_IMPL(ShibakenApproach);
IS_MSG_IMPL(ShibakenKick);
IS_MSG_IMPL(SkaterAttack);
IS_MSG_IMPL(SpherePush);
IS_MSG_IMPL(SphinxJumpAttack);
IS_MSG_IMPL(SphinxQuizRouteKill);
IS_MSG_IMPL(SphinxRideAttack);
IS_MSG_IMPL(SphinxRideAttackReflect);
IS_MSG_IMPL(SphinxRideAttackTouchThrough);
IS_MSG_IMPL(SphinxRideAttackTouch);
IS_MSG_IMPL(StampTo2D);
IS_MSG_IMPL(StartHack);
IS_MSG_IMPL(StartInSaucePan);
IS_MSG_IMPL(StatueDrop);
IS_MSG_IMPL(StatueTrampleReflect);
IS_MSG_IMPL(StatuePush);
IS_MSG_IMPL(StatueSnap);
IS_MSG_IMPL(SunshineAttack);
IS_MSG_IMPL(TankBullet);
IS_MSG_IMPL(TankBulletNoReaction);
IS_MSG_IMPL(TankExplosion);
IS_MSG_IMPL(TankHackTrample);
IS_MSG_IMPL(TankKickHack);
IS_MSG_IMPL(TankKickEnemy);
IS_MSG_IMPL(TankLookOn);
IS_MSG_IMPL(TestPunch);
IS_MSG_IMPL(TestPunchStrong);
IS_MSG_IMPL(TimerAthleticDemoStart);
IS_MSG_IMPL(TouchDoorDrumn);
IS_MSG_IMPL(TouchFireDrum2D);
IS_MSG_IMPL(TrashBoxIn);
IS_MSG_IMPL(TRexAttack);
IS_MSG_IMPL(TRexAttackCollideBody);
IS_MSG_IMPL(TRexAttackCollideHead);
IS_MSG_MULTIPLE_IMPL(TRexAttackCollideAll, TRexAttackCollideBody, TRexAttackCollideBody);
IS_MSG_IMPL(TRexDashAttack);
IS_MSG_IMPL(TRexScrollPartsBreakWith);
IS_MSG_IMPL(TsukkunForceCancelCollide);
IS_MSG_IMPL(TsukkunHoldCollide);
IS_MSG_IMPL(TsukkunThroughCollide);
//IS_MSG_IMPL(TsukkunThrustAll);
/*
IS_MSG_IMPL(TsukkunThrust, bool*);
IS_MSG_IMPL(TsukkunThrustCollide, bool*);
*/
IS_MSG_IMPL(TsukkunNoTrace);
IS_MSG_IMPL(TsukkunThrustHole);
IS_MSG_IMPL(UtsuboAttack);
IS_MSG_IMPL(WanderBossCameraRange);
IS_MSG_IMPL(WanwanEnemyAttack);
IS_MSG_IMPL(WanwanBlockAttack);
IS_MSG_IMPL(WanwanHoleIn);
IS_MSG_IMPL(WaterRoadIn);
IS_MSG_IMPL(WaterRoadNear);
IS_MSG_IMPL(WanwanPush);
IS_MSG_IMPL(WanwanReboundAttack);
IS_MSG_IMPL(WeaponItemGet);
IS_MSG_IMPL(WhipAttack);
IS_MSG_IMPL(WhipBind);
IS_MSG_IMPL(WhipHold);
IS_MSG_IMPL(WhipThrow);
IS_MSG_IMPL(YokinBallAttack);
IS_MSG_IMPL(YoshiDirectEat);
IS_MSG_IMPL(YoshiTongueAttack);
IS_MSG_IMPL(YoshiTongueEatBind);
IS_MSG_IMPL(YoshiTongueEatBindCancel);
IS_MSG_IMPL(YoshiTongueEatBindFinish);
IS_MSG_IMPL(YoshiTongueEatHomingTarget);
IS_MSG_IMPL(YukimaruPush);
IS_MSG_IMPL(KillerAttackNoExplode);
IS_MSG_IMPL(KillerMagnumAttack);
IS_MSG_IMPL(KillerMagnumHackAttack);
IS_MSG_IMPL(GabuzouAttack);
IS_MSG_IMPL(StackerRollingAttack);
IS_MSG_IMPL(StackerCapBoostAttack);
IS_MSG_IMPL(IgnoreIgnitionBomb);
IS_MSG_IMPL(ExplosionReflectBomb);
IS_MSG_IMPL(GolemStampPress);
//void setMsgYoshiTongueEatBindRadiusAndOffset(const al::SensorMsg*, f32, f32);
//void setMsgYoshiTongueEatBindScale(const al::SensorMsg*, f32);

/*
IS_MSG_IMPL(TsukkunThrustSpin, bool*);
IS_MSG_IMPL(TsukkunThrustReflect, bool*);
IS_MSG_IMPL(TsukkunThrustHitReflectCollide, bool*);
IS_MSG_IMPL(TsukkunThrustReflectCollide, bool*);
IS_MSG_IMPL(SwitchOnWithSaveRequest, SaveObjInfo**);
*/
//IS_MSG_IMPL(NpcCapReactionAll);
//IS_MSG_IMPL(HackNpcCapReactionAll);

}
